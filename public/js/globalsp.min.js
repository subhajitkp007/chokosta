let currentscore = 0;
let tut = false;
let compmode=true;
let nextplayer=[1,3];
let playermap = {
    1: [23, 24, 25, 20, 15, 10, 5, 4, 3, 2, 1, 6, 11, 16, 21, 22, 17, 12, 7, 8, 9, 14, 19, 18, 13],
    3: [3, 2, 1, 6, 11, 16, 21, 22, 23, 24, 25, 20, 15, 10, 5, 4, 9, 14, 19, 18, 17, 12, 7, 8, 13],
    2: [15, 10, 5, 4, 3, 2, 1, 6, 11, 16, 21, 22, 23, 24, 25, 20, 19, 18, 17, 12, 7, 8, 9, 14, 13],
    4: [11, 16, 21, 22, 23, 24, 25, 20, 15, 10, 5, 4, 3, 2, 1, 6, 7, 8, 9, 14, 19, 18, 17, 12, 13]
};
let profit={};
for(let i=1;i<=24;i++)
profit[playermap[1][i]]=i;
let nothidden=true;
let playercolor = {
    1: "red",
    2: "yellow",
    3: "blue",
    4: "green"
};
let ghutiarr = [];
CH = 0;
let computer = {
    1: 0,
    2: 0,
    3: 0,
    4: 0
};
let turn = "";
let playername = {
    1: "Player1",
    2: 'Player2'
};
let clientId = "";
let gameId = "";
let move = 0;
let playerid = 1;
let completed = {
    1: 0,
    2: 0,
    3: 0,
    4: 0
};
let ghutipos = {
    1: {
        1: 0,
        2: 0,
        3: 0,
        4: 0
    },
    2: {
        1: 0,
        2: 0,
        3: 0,
        4: 0
    },
    3: {
        1: 0,
        2: 0,
        3: 0,
        4: 0
    },
    4: {
        1: 0,
        2: 0,
        3: 0,
        4: 0
    }
};
let playernum = 0;
let playerrem = 0;
let pos = {
    0: ["subhajit", "kp", "007"],
    1: [],
    2: [],
    3: ["p3g1", "p3g2", "p3g3", "p3g4"],
    4: [],
    5: [],
    6: [],
    7: [],
    8: [],
    9: [],
    10: [],
    11: ["p4g1", "p4g2", "p4g3", "p4g4"],
    12: [],
    13: [],
    14: [],
    15: ["p2g1", "p2g2", "p2g3", "p2g4"],
    16: [],
    17: [],
    18: [],
    19: [],
    20: [],
    21: [],
    22: [],
    23: ["p1g1", "p1g2", "p1g3", "p1g4"],
    24: [],
    25: []
};
let notsafe = new Array();
for (let i = 0; i < 27; i++) notsafe.push(1);
notsafe[3] = 0;
notsafe[11] = 0;
notsafe[13] = 0;
notsafe[15] = 0;
notsafe[23] = 0;
let pending = false;

function toggleslidebar() {
    documentelemId["slidebar"].classList.toggle('active');
}
for (let j = 1; j < 5; j++)
    for (let i = 1; i < 5; i++) {
        let id = "p" + j + "g" + i;
        ghutiarr.push(id);
    }
let W = 0,
    H = 0,
    TH = 0,
    TW;
W = $(window).width();
H = $(window).height();
TH = H;
TW = W;
H = Math.min(W, H);
W = Math.min(W, H);
let startx = (TW - W) / 2 + 3,
    starty = 0;
let dicesize = 0;
let ghutisize = 0;
let canva = 0,
    ctx = 0;
let boxheight = 0,
    boxwidth = 0;
let footerheight = 0;
let timeLeft = 30;
let bttnid = 0;
let timerId = 0;
let boxes = [];
let documentelemId = {};
for (let i = 1; i < 5; i++) {
    let p1g = "p1g" + i,
        p3g = 'p3g' + i,
        p2g = 'p2g' + i,
        p4g = 'p4g' + i;
    documentelemId[p1g] = document.getElementById(p1g);
    documentelemId[p2g] = document.getElementById(p2g);
    documentelemId[p3g] = document.getElementById(p3g);
    documentelemId[p4g] = document.getElementById(p4g);
}
for (let i = 0; i < 4; i++) {
    let d = 'dice' + i;
    let ad = 'animedice' + i;
    documentelemId[d] = document.getElementById(d);
    documentelemId[ad] = document.getElementById(ad);
}
documentelemId['playbutton'] = document.getElementById('playbutton');
documentelemId['chatbutton'] = document.getElementById('chatbutton');
documentelemId['closebutton'] = document.getElementById('closebutton');
documentelemId['helpbutton'] = document.getElementById('helpbutton');
documentelemId['tutorial'] = document.getElementById('tutorial');
documentelemId['GameCanvas'] = document.getElementById('GameCanvas');
documentelemId['mainpart'] = document.getElementById('mainpart');
documentelemId['menupart'] = document.getElementById('menupart');
documentelemId['canvaspart'] = document.getElementById('canvaspart');
documentelemId['chattext'] = document.getElementById('chattext');
documentelemId["slidebar"] = document.getElementById("slidebar");
documentelemId["prgcolor"] = document.getElementById("prgcolor");
let myturn = false;
const playbtn = documentelemId['playbutton'];
let prgwidth = 0;

function updatewindow() {
    bttnid = documentelemId["playbutton"];
    W = $(window).width();
    H = $(window).height();
    if (W > H) {
        $('html,body').css({
            overflow: 'auto',
            height: 'auto'
        });
    }
    TH = H;
    TW = W;
    H = Math.min(W, H);
    W = H;
    let x = TH - H - 5;
    let hvh = H / TH * 100,
        xvh = (TH - H) / TH * 100;
    documentelemId["mainpart"].style.height = 95 + "vh";
    documentelemId["canvaspart"].style.height = hvh + "vh";
    documentelemId["menupart"].style.height = TH - H + "px";
    startx = (TW - W) / 2 + 2;
    starty = TH * 0.03;
    footerheight = TH * 0.03;
    let height = H - starty;
    let width = TW - 2 * startx;
    boxheight = Math.floor(height * 0.2);
    boxwidth = Math.floor(width * 0.2);
    dicesize = Math.floor(Math.min(boxheight, boxwidth) * 0.45);
    let dicesizevh = dicesize / TH * 100;
    ghutisize = Math.floor(Math.min(boxheight, boxwidth) * 0.35);
    let ghutisizevh = ghutisize / TH * 100;
    for (let i = 1; i < 5; i++) {
        for (let j = 1; j < 5; j++) {
            let id = "p" + i + "g" + j;
            let circle = documentelemId[id];
            circle.style.width = ghutisizevh + "vh";
            circle.style.height = ghutisizevh + "vh";
        }
    }
    for (let i = 0; i < 4; i++) {
        let id = "dice" + i;
        let circle = documentelemId[id];
        circle.style.height = dicesizevh + "vh";
        circle.style.width = dicesizevh + "vh";
    }
    for (let i = 0; i < 4; i++) {
        let id = "animedice" + i;
        let circle = documentelemId[id];
        circle.style.height = dicesizevh + "vh";
        circle.style.width = dicesizevh + "vh";
    }
    drawBoard();
    drawghuti();
    drawdicestart();
    drawanimedicestart();
}
let socket = null;
let names = {
    1: 'player1',
    2: 'player2',
    3: 'player3',
    4: 'player4'
};

function tutorial() {
    if (tut) {
        tut = false;
        swal("Tutorial Mode turned off", "you can turn it on any time by clicking the tutorial mode button again", "success");
    } else {
        tut = true;
        swal("Tutorial Mode turned on", "you can turn it off any time by clicking the tutorial mode button again", "success");
    }
}