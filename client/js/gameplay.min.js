
function play() {
    if (playbtn.innerText == "Role Dice") {
        setTimeout(afteranimation, 500);
    }
    else if (playbtn.innerText === "Create Game") {
        if (document.getElementById("dual").checked) {
            if (socket) creategame();
            else swal("please wait a sec page is not loaded properly", "error 007", "error");
        }
        else{
            
            let invitelink="https://chokosta.herokuapp.com/singleplayer.html";
            location.reload(invitelink);
            location.assign(invitelink);
        }
        
            playbtn.style.backgroundColor = "white"; playbtn.innerText = "Wait for a second";
            playbtn.style.color = turn; playbtn.disabled = true;
        
    }


}
         function creategame(){let name=''; swal("Enter Your Name ","Creating a new game.Your default name is player1 if you want to change enter the name else press ok",{content: "input",}) .then((value)=>{name=value.replace(/[^a-zA-Z0-9]/g, ""); if(name.length>20) name.slice(0,18); if (name!=null && name !="") names[1]=name; playerid=1; socket.emit("create",{'gid':gameId,'cid':clientId,'maxplayer':4,'win':0,'pos':pos,'ghutipos':ghutipos,'name':names[1]}); updatezindex(playerid); let currlink1=window.location.href+"?subha"; let linkarr1=currlink1.split('?'); let invitelink=linkarr1[0]+"?gid="+gameId+"="+names[1]; swal("Success " , "Your unique game code is:"+gameId+"\nHere is your new game link: "+invitelink+"\n.Send this link to start the game.", "success"); if (navigator.share){let url=invitelink; let title="chockosta game invitation:"; let description=name +" has inivited you to play the game chockosta .Your gameid is: "+gameId+" click the link and enjoy the game."; navigator.share({title: title, text: description, url: url});}}); playbtn.style.color="black"; playbtn.innerText="Waiting for player joining"; playbtn.style.backgroundColor='white'; playbtn.disabled=true; updatezindex(1);}function gamewin(){let cnt=0; for (let i=1; i < 5; i++){if (ghutipos[playerid][i]==24) cnt++;}if (cnt==4){updategreater4(13); pending=false; socket.emit("complete",{'gid':gameId,'ply':playerid}); swal("Winner winner chicken Dinner","Congrats "+ name +"You won the Game", "success").then(()=>{swal({title: "Do you want to play the game again?", text: "Click on the Create Game button and create new game.Enjoy the game if you found any bug let me know mail:subhajitmahata06@gmail.com ", icon: "success", buttons: true,}).then((willDelete)=>{if (willDelete){let currlink1=window.location.href+"?subha"; let linkarr1=currlink1.split('?'); location.assign(linkarr1[0]);}else{let wlink="https://api.whatsapp.com/send?phone=919732273358&text=*Hi%20Subhajit*%20I%20have%20played%20your%20game%20*My%20feedback*%20&source=&data=#"; location.assign(wlink);}});});}}function afteranimation(){showdice(); roleghuti(); boxes=[]; if (moveghutiIsPossible(playerid)){pending=true; playbtn.innerText="Click any " + playercolor[playerid] + " guthi you want to move"; timeLeft=30; playbtn.style.color=playercolor[playerid]; playbtn.style.backgroundColor="white";}}function countdown(){if (prgwidth>=100){clearInterval(timerId); if(myturn){socket.emit("movedone",{'ply':playerid,'pos':pos,'g':ghutipos,'gid':gameId,'boxes':boxes}); prgwidth=0; timerId=0; let rghutimove=moveghutiIsPossible(playerid); if(pending && rghutimove) moveghuti(playerid, rghutimove); else swal("Ooops "+ name , "You missed your chance.You have 1 minute for each turn.Try to move little bit faster on next move.", "error");}else{stopcountdown();}}else{prgwidth+=0.10; documentelemId["prgcolor"].style.width=prgwidth+'%';}}function stopcountdown(){if (timerId !=0){clearInterval(timerId); prgwidth=0; timerId=0;}}function moveghuti(ply, idx){if (pending && ply==playerid && currentscore){let mapidx=ghutipos[ply][idx] + currentscore; if (mapidx < 25){if (checkkatakuti(playerid, idx, mapidx)) socket.emit("movenotdone",{'ply':playerid,'pos':pos,'g':ghutipos,'gid':gameId,'boxes':boxes}); else if (currentscore==8 || currentscore==4) socket.emit("movenotdone",{'ply':playerid,'pos':pos,'g':ghutipos,'gid':gameId,'boxes':boxes}); else socket.emit("movedone",{'ply':playerid,'pos':pos,'g':ghutipos,'gid':gameId,'boxes':boxes}); pending=false; stopcountdown(); currentscore=0; hidedice(); let x=1; if(ply==1) x=3; playbtn.innerText="Wait for "+playername[x]+"'s move"; playbtn.style.color=playercolor[x]; playbtn.style.backgroundColor="white"; gamewin();}else{swal("Invalid move "+ name , "You can't move this ghuti", "error");}}else{swal("Invalid move "+ name , "You can't move this ghuti", "error");}}function checkkatakuti(ply1, idx, mapidx){let boxno=playermap[ply1][ghutipos[ply1][idx]]; let destboxno=playermap[ply1][mapidx]; let ply1id="p" + ply1 + "g" + idx; boxes.push(boxno); boxes.push(destboxno); let delidx=pos[boxno].indexOf(ply1id); if (delidx > -1) pos[boxno].splice(delidx, 1); if (notsafe[destboxno] && pos[destboxno].length==1 && ply1 !=parseInt(pos[destboxno][0].charAt(1))){let ply2id=pos[destboxno][0]; let ply2=parseInt(ply2id.charAt(1)), idx2=parseInt(ply2id.charAt(3)); pos[destboxno]=[]; ghutipos[ply2][idx2]=0; pos[playermap[ply2][0]].push(ply2id); ghutipos[ply1][idx] +=currentscore; pos[destboxno].push(ply1id); boxes.push(playermap[ply2][0]); pending=false; return true;}else{pos[destboxno].push(ply1id); ghutipos[ply1][idx] +=currentscore; pending=false; return false;}}function moveghutiIsPossible(ply){let notposible=true; for (let i=1; i < 5; i++){if (ghutipos[ply][i] + currentscore < 25){notposible=false; return i;}}if (notposible){pending=false; stopcountdown(); hidedice(); let x=1; if(ply==1) x=3; playbtn.innerText="wait for "+playername[x]+"'s move";; playbtn.style.color=playercolor[x]; playbtn.style.backgroundColor="white"; if(currentscore==4 || currentscore==8){socket.emit("movenotdone",{'ply':playerid,'pos':pos,'g':ghutipos,'gid':gameId,'boxes':boxes}); swal(currentscore+" But no valid move exists","Try again!!!","error");}else{swal("ooops! No valid move exists","Better luck next time!!!","error"); socket.emit("movedone",{'ply':playerid,'pos':pos,'g':ghutipos,'gid':gameId,'boxes':boxes});}currentscore=0;}return 0;}function chat(){let chatbtn=documentelemId["chatbutton"]; if(chatbtn.innerText=="JOIN"){let flggame=false; swal("Enter Your Name","Your default name is player2 if you want to change enter the name else press ok ",{content: "input",}) .then((value)=>{let tmpname=value.replace(/[^a-zA-Z0-9]/g, ""); if(tmpname.length>20) tmpname.slice(0,18); if (tmpname !=null && tmpname!="") names[2]=tmpname; flggame=true;}).then(()=>{if(flggame){swal("Enter Game Code","If you have no gameId create a game code by clicking Create Game button and share link with your friends and enjoy the game!!! ",{content: "input",}) .then((value)=>{let tmpname=value.replace(/[^0-9]/g, ""); if(tmpname.length>20) tmpname.slice(0,18); if (tmpname !=null && tmpname!=""){gameId=tmpname; flggame=true}; socket.emit('join',{'gid': gameId, 'cid': clientId, 'name': names[2]}); playerid=3; updatezindex(playerid);});}});}else{swal("Send message","Write message you want to send your opponent:",{content: "input",}) .then((value)=>{let tmpname=value.replace(/[&\/\\#$~'"]/g, ''); if(tmpname.length>100) tmpname.slice(0,99); socket.emit('chatmsg',{'msg':value+' ','ply':playerid,'gid':gameId});});}}